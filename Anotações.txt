Criando projeto: Visual Studio 2022
--------------------------------------------------------------------
Cria New Project
- C#
- Asp.Net Web Application [.Net Framework ]
>>>

- Project Name: Sistema
- Location: *****
- Solution Name: Sistema
- Framework: .Net Framework 4.7.2
- Create

- MVC
- Authentication [ Individual Accounts]
- Create


--------------------------------------------------------------------
ADICIOANDO MODELO
--------------------------------------------------------------------
- Pasta [Models]
-- add / Class
--- Produto.cs


--------------------------------------------------------------------
ADICIONANDO REFERÊNCIAS
--------------------------------------------------------------------
- References
-- Add Reference...
--- Assemblies
---- Extensions [ pesquisar: Entity ]
---- [x] System.Web.Entity


OU

- References
-- Manage NuGet Packages...
--- Browse [ pesquisar: Entity ]
---- EntityFramework


--------------------------------------------------------------------
CONTROLLER
--------------------------------------------------------------------
- Add / Controller
-- MVC 5 Controller With read / Write actions
>>>
---- ProdutoController


--------------------------------------------------------------------
BANCO DE DADOS
--------------------------------------------------------------------
- Projeto / Add / New Folder >>> [pasta: Context] (pasta onde 
colocamos os arquivos de banco de dados)
- Context / Add / Class >>> [LojaContext] 
*** Devemos informar que a classe vai manipular os dados de 
nossa base de dados por isso ela deve herdar de "DbContext" "System.Data.Entity"

Obs: ProdutoController->Possui->LojaContext->Possui->Produto



--------------------------------------------------------------------
COMPILAR
--------------------------------------------------------------------
- Vamos compilar a aplicação para que os arquivos se encherguem.
-- Build / Build Solution


--------------------------------------------------------------------
CRIANDO A VIEW - LIST (SELECT ALL)
--------------------------------------------------------------------
- Btn na action / add view
-- View Name: Index (nome da action)
-- Template: List
-- Model Class: Produto
-- Data Context Class:  LojaContext


--------------------------------------------------------------------
CRIANDO A VIEW - CREATE (INSERT)
--------------------------------------------------------------------
- Btn na action / add view
-- View Name: Create (nome da action)
-- Template: Create
-- Model Class: Produto
-- Data Context Class:  LojaContext



--------------------------------------------------------------------
CRIANDO A VIEW - DETALHES (SELECT BY ID)
--------------------------------------------------------------------
- Btn na action / add view
-- View Name: Details (nome da action)
-- Template: Details 
-- Model Class: Produto
-- Data Context Class:  LojaContext





--------------------------------------------------------------------
STRING DE CONEXÃO
--------------------------------------------------------------------
 Web.config
<add name="LojaContext" connectionString=".;Initial Catalog=loja;Integrated Security=True" providerName="System.Data.SqlClient" />

- Nome da conexão [name="LojaContext"]
- Servidor localhost [connectionString=".;]
- Nome do banco [Initial Catalog=loja;]


--------------------------------------------------------------------
MIGRATION MANUAL
--------------------------------------------------------------------
- Tools / Gerenciador de Pacotes do NuGet / Console do Gerenciado de Pacotes

Digite os comandos

- [Vai criar o arquivo de migração]
- Enable-Migrations -ContextTypeName LojaContext 

- Add-Migration [Add < Campo criado > Model <Nome do Modelo>
- Add-Migration AddComentarioModelProduto

- [Atualiza a base de dados]
- Update-Database
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
CRIANDO OUTRO PROJETO COM MIGRAÇÃO DINÂMICA
--------------------------------------------------------------------
Cria New Project
- C#
- Asp.Net Web Application [.Net Framework ]
>>>

- Project Name: Sistema
- Location: *****
- Solution Name: Sistema
- Framework: .Net Framework 4.7.2
- Create

SELECIONE
- MVC, WEB FORMS e WEB API
- Authentication [ Individual Accounts]
- Create


--------------------------------------------------------------------
CONTROLLER
--------------------------------------------------------------------
Crie o modelo conforme exemplo anterior
Compile o projeto primeiro

- Controller/ Add /Controller
- MVC5 Controller With Views, Using Entity Framework
-- Model Class: Produto
-- Data Context Class -> Clique no [+] e adicione a sugestão
--- [*] Generate View
--- [*] Reference Script Libraries
--- [*] Use a layout page
-- Controller Name: ProdutoesController

OBSERVAÇÃO: 
- Observe que foi gerado outra string de conexão.
- Ajuste se for necessário



EXECUTE O COMANDO NO TERMINAL
 Enable-Migrations -ContextTypeName NomeDoContexto -EnableAutomaticMigrations



Será criado uma pasta 'Migrations' com o arquivo Configurations.cs
Neste arquivo "Configurations.cs" devemos inserir um comando:

 internal sealed class Configuration : DbMigrationsConfiguration<SistemaLoja.Data.SistemaLojaContext>
 {
     public Configuration()
     {
         AutomaticMigrationsEnabled = true;
         AutomaticMigrationDataLossAllowed = true;  <<<<< [Inserir esta Linha]
         ContextKey = "SistemaLoja.Data.SistemaLojaContext";
     }

     protected override void Seed(SistemaLoja.Data.SistemaLojaContext context)
     {
         //  This method will be called after migrating to the latest version.

         //  You can use the DbSet<T>.AddOrUpdate() helper extension method
         //  to avoid creating duplicate seed data.
     }
 }


Agora devemos inserir uma linha de comando no arquivo "Global.asax"

    public class MvcApplication : System.Web.HttpApplication
    {
        protected void Application_Start()
        {
            Database.SetInitializer(new MigrateDatabaseToLatestVersion<Data.SistemaLojaContext,Migrations.Configuration>());  <<<<< [Inserir esta Linha]
            AreaRegistration.RegisterAllAreas();
            GlobalConfiguration.Configure(WebApiConfig.Register);
            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
            RouteConfig.RegisterRoutes(RouteTable.Routes);
            BundleConfig.RegisterBundles(BundleTable.Bundles);
        }
    }

--------------------------------------------------------------------
EVITANDO DELETAR EM CASCATA
--------------------------------------------------------------------
No arquivo CONTEXT, adicione o seguinte código

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration.Conventions;
using System.Linq;
using System.Web;

namespace SistemaLoja.Data
{
    public class SistemaLojaContext : DbContext
    {
          
        public SistemaLojaContext() : base("name=SistemaLojaContext")
        {
        }

	//------- Adicione este código - início --------------------------
        protected override void OnModelCreating(DbModelBuilder modelBuilder) {
            modelBuilder.Conventions.Remove<OneToManyCascadeDeleteConvention>();
        }
	//------- Adicione este código - fim --------------------------

        public System.Data.Entity.DbSet<SistemaLoja.Models.Produto> Produtoes { get; set; }

        public System.Data.Entity.DbSet<SistemaLoja.Models.TipoDocumento> TipoDocumentoes { get; set; }

        public System.Data.Entity.DbSet<SistemaLoja.Models.Funcionario> Funcionarios { get; set; }
    }
}

--------------------------------------------------------------------
